@using DeedDescriptor.Objects

<style>
    .rz-card .rz-variant-flat:hover{
        cursor: pointer !important;
    }
</style>

<RadzenCard>
    <RadzenRow Gap="0">
        <RadzenColumn Size="1">
            <RadzenText TextStyle="TextStyle.H6" TagName="TagName.H5" class="rz-color-on-secondary-lighter">@(Shape.Point)</RadzenText>
        </RadzenColumn>
        @* <RadzenColumn Size="1">
            @ShapeType
        </RadzenColumn> *@
        <RadzenColumn Size="10">
            <RadzenStack Gap="20px" AlignItems="AlignItems.Center" Orientation="Orientation.Horizontal">
                @if (!IsEditing)
                {
                    <RadzenCard Variant="Variant.Flat">
                        <RadzenIcon Icon="edit" IconColor="@Colors.Info" onclick="@(() => SetIsEditing(true))" />
                    </RadzenCard>
                    <RadzenText TextStyle="TextStyle.Body2">@(Shape.Description)</RadzenText>
                }
                else
                {
                    <RadzenCard Variant="Variant.Flat">
                        <RadzenIcon Icon="check" IconColor="@Colors.Success" onclick="@(() => OnEditClose(false))" />
                    </RadzenCard>
                    <RadzenCard Variant="Variant.Flat">
                        <RadzenIcon Icon="cancel" IconColor="@Colors.Danger" onclick="@(() => OnEditClose(true))" />
                    </RadzenCard>
                    <RadzenTextArea Style="width:100%; display:block; word-wrap: break-word" @bind-Value=@Shape.Description />
                }

            </RadzenStack>
        </RadzenColumn>
    </RadzenRow>
    @MainContent
</RadzenCard>

@code {
    [Parameter]
    public Shape Shape { get; set; }
    [Parameter]
    public RenderFragment MainContent { get; set; }
    [Parameter]
    public RenderFragment ShapeType { get; set; }

    public bool IsEditing { get; set; }
    public string oldDescription { get; set; }


    public void SetIsEditing(bool isEditing)
    {
        IsEditing = isEditing;
        oldDescription = Shape.Description;
    }

    public void OnEditClose(bool canceled)
    {
        if (canceled)
        {
            Shape.Description = oldDescription;
        }
        SetIsEditing(false);

    }
}
